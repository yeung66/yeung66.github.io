<?xml version="1.0" encoding="utf-8"?><rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>YeungYeah's Blog</title><link>https://scottyeung.top/en/</link><description>Record the YeungYeah's thoughts and actions.</description><generator>Hugo 0.122.0 https://gohugo.io/</generator><language>en-US</language><managingEditor>yeungyeah@qq.com (YeungYeah)</managingEditor><webMaster>yeungyeah@qq.com (YeungYeah)</webMaster><lastBuildDate>Mon, 26 Feb 2024 15:49:48 +0000</lastBuildDate><atom:link rel="self" type="application/rss+xml" href="https://scottyeung.top/en/atom.xml"/><item><title>Rethinking Investment</title><link>https://scottyeung.top/en/2024/think-invest-again/</link><guid isPermaLink="true">https://scottyeung.top/en/2024/think-invest-again/</guid><pubDate>Sun, 21 Jan 2024 22:34:34 +0800</pubDate><author>yeungyeah@qq.com (YeungYeah)</author><description>&lt;p>After reading some of Meng Yan's views on value investing in my senior year, I started consciously considering the matter of investment. Since 2019, I have been regularly investing in domestic funds, from initially buying index funds to track overall development, to later choosing some highly-rated aggressive funds for better returns, my investment philosophy began to gradually shift. However, no matter how I chose, it couldn't resist the overall environment and trend. When the entire domestic market was in poor shape, the choice was essentially meaningless. Coupled with the discovery of various oddities, I became more clearly aware that the domestic stock and investment market is a joke.&lt;/p>
&lt;p>Why did I gradually lose faith in long-term value investing? In my understanding, value investing is essentially using money to support and accompany a company's growth, and then to gain a portion of the value from this growth. The essence of the stock market should be to help companies raise funds for better development and growth. However, the current domestic stock market seems completely devoid of this sense. Financing is just a part of people trying to get money, more like companies taking money from retail investors and then spending it or distributing it. Simply put, we retail investors are just handing over our money for them to spend. The stock market is like this, and the derived funds naturally aren't much better.&lt;/p>
&lt;p>In fact, I had a question before, that is, if value investing or so-called long-termism truly waits for a bull market to start profiting and exit, but does it really need to be long-term enough to hold for several years or even decades? If the profits are spread over so many years, is the return rate really good? Secondly, both the money and the profits need to be locked up for so long and cannot be used, greatly reducing the value of having money/assets.&lt;/p>
&lt;p>Therefore, I plan to switch to the US stock market and stop investing in the domestic market. I couldn't make up my mind before, but today when I was scrolling through Twitter, I realized that I had always lacked the ability to stop losses/take profits. The economy has been bad for a long time, but I was always reluctant to stop, always comforting myself that it would rise back one day. Plus, the money I invested regularly wasn't much, so I kept investing until now, when the total return is almost -20%. Losing some money is one thing, and on the other hand, the money I invested regularly could have been put in other places to make money.&lt;/p>
&lt;p>Making money has become a more explicit pursuit for me after starting to work, and I increasingly feel that making money is a matter of course. I will no longer limit the ways of making money, nor will I limit my thinking about making money. Any way that can make money is a good way (of course, it must be legal, compliant, and ethical).&lt;/p>
&lt;p>I hope to make more money, and I also hope the economy gets better, so everyone can make money.&lt;/p></description><category domain="https://scottyeung.top/en/posts/">posts</category><category domain="https://scottyeung.top/en/tags/life/">life</category><category domain="https://scottyeung.top/en/tags/Journal/">Journal</category><category domain="https://scottyeung.top/en/tags/Investment/">Investment</category><category domain="https://scottyeung.top/en/tags/Money/">Money</category></item><item><title>2023 Annual Record</title><link>https://scottyeung.top/en/2023/record-of-2023/</link><guid isPermaLink="true">https://scottyeung.top/en/2023/record-of-2023/</guid><pubDate>Sun, 31 Dec 2023 18:42:19 +0800</pubDate><author>yeungyeah@qq.com (YeungYeah)</author><description>&lt;p>Last weekend, I had the idea of writing an annual summary. After creating a new file and dictating a lot of content, it felt like I was pouring out my own thoughts, something that could only be written for my own eyes. So, I set it aside for a week and chose to create a new file to rewrite a version that could be published.&lt;/p>
&lt;p>This year is actually an important milestone, marking the transition from being a student to a worker. The changes in identity, role, and environment have brought me a lot of thoughts and ideas. However, I don't have much time to work on a regular basis, and many ideas that pop up in my mind may not be thought through, or they might be forgotten because I didn't record them. So, I decided to take this opportunity of writing an annual record to summarize some thoughts.&lt;/p>
&lt;h2 id="farewell-to-campus">Farewell to Campus&lt;/h2>
&lt;p>In June of this year, I finally ended my 19-year academic journey. Since I had already settled my job last year and signed a tripartite agreement, the remaining time on campus was relatively relaxed.&lt;/p>
&lt;ul>
&lt;li>January was spent at home playing;&lt;/li>
&lt;li>In February, I returned to school to work on the remaining content of my graduation project;&lt;/li>
&lt;li>In March, I simply wrote a patent for my work to meet the graduation requirements;&lt;/li>
&lt;li>April was spent sprinting to complete my graduation thesis;&lt;/li>
&lt;li>In May, I completed the defense;&lt;/li>
&lt;li>In June, I went on a graduation trip and attended the graduation ceremony with my family.&lt;/li>
&lt;/ul>
&lt;p>Overall, the final time on campus was smooth and successful. I graduated, obtained a degree, found a job, and felt quite satisfied 😌&lt;/p>
&lt;h2 id="starting-work">Starting Work&lt;/h2>
&lt;p>Not long after graduation, I started my job and officially became a worker. Although I had worked for a few months during my internship last year, formal work and internships are quite different. After all, you can leave at any time during an internship, but there is no way out in formal work, especially as a valuable fresh graduate. No matter what, you have to gain a few years of experience before moving on to social recruitment.&lt;/p>
&lt;p>For my first job, I chose server-side business development, which is relatively in line with my career direction. I remember on my first day of work, my senior colleague and I talked about believing that what we do is meaningful. Although this may sound like self-encouragement or even self-consolation, I felt that my work seemed to have some significance when I accidentally saw in the Xiaohongshu comment section that someone had discovered and used the features I was responsible for adding.&lt;/p>
&lt;p>However, although I am a technical developer, most of my daily work is spent on communication alignment and document analysis. The core coding does not take up much time. To some extent, &lt;strong>the ability to communicate, coordinate, and collaborate is more important than technical level&lt;/strong>, especially in business development.&lt;/p>
&lt;p>Why don't developers write much code? On the one hand, most business systems have already matured, and many contents are almost built. For new requirements, existing links can often be reused, and even if there are changes, they are built and repaired on this basis. On the other hand, the company is constantly improving efficiency, and the direction and means of improving efficiency often involve transforming some code development requirements into process arrangement through abstraction, turning code writing into referable and copyable configuration, and then assigning these tasks to outsourcing. &lt;del>How much efficiency can be improved is hard to say, it's ultimately a number, but frontline developers don't seem to have much free time&lt;/del>.&lt;/p>
&lt;p>However, this may just be due to the team I am in and the applications I am responsible for. But as the big boss said in the first all-staff meeting, the company doesn't really have an obligation to help everyone grow, so it's up to us. If there are no opportunities, create them. If opportunities are scarce, seize them. If you don't write code, read code, read documents, and once you've read them, they become mine😆&lt;/p>
&lt;p>However, after dealing with many business requirements, I also reflect on the role of technology and whether it is really that important. Sometimes it seems that business knowledge is also very important. Being able to create and attract business requirements and facilitate transactions is more important. What value can a great system bring if it can't be sold and nobody uses it? Even if it's garbage, as long as it has enough users and occupies enough market position, it can drive out good money with bad money. &lt;del>It seems that sales ability is the strongest!&lt;/del>&lt;/p>
&lt;h2 id="programming-journey">Programming Journey&lt;/h2>
&lt;p>Despite this, I really love coding from the bottom of my heart, and I enjoy exploring and tinkering with all kinds of interesting things. Apart from work, this year I studied F#, Rust, and Kotlin in depth. All three languages are great, and writing in them is a pleasure, satisfying my love and pursuit of functional programming.&lt;/p>
&lt;p>On the journey of learning functional programming, sometimes I really feel that I might lack insight, and my imagination for functional writing is a bit lacking. Sometimes I really don't know how to write in a functional way, or how to implement iteration with recursion. Only after seeing other people's codes and getting insights do I realize that it can be written this way.&lt;/p>
&lt;p>This year, I also completed the Advent of Code challenge for the first time. Although I encountered many challenges, such as some unfamiliar theorems and formulas, or going out for team building for three days and having to catch up, I finally completed all the challenges on Christmas Day, lighting up all the patterns.&lt;/p>
&lt;p>&lt;img src="https://scottyeung.top/my-images/Dec-25-2023%2021-37-21.gif" alt="">&lt;/p>
&lt;p>Although it seems like I've learned a lot and know a lot, I still feel anxious from time to time. I worry about whether these things I'm doing are really helpful for my work and whether they improve my abilities. If I really change jobs, can these skills help me find a better job? Probably not. This seems very utilitarian, but there seems to be no way around it. I can only stop thinking so much and enjoy myself first.&lt;/p>
&lt;p>The direction of my learning (or playing) will probably continue to focus on these three languages and functional programming. As for work-related system design and middleware, I might go back to learning at work, if I still have time and haven't been overwhelmed by work.&lt;/p>
&lt;h2 id="about-money">About Money&lt;/h2>
&lt;p>After starting formal work, I began to have a more stable income. How to manage and use it has become an important issue. I often see discussions about financial freedom, and to be honest, I am very attracted to this goal. Moreover, I am very realistic in defining the meaning of working, which is to make money. &lt;strong>Making money, not shameful.&lt;/strong>&lt;/p>
&lt;p>What is considered financial freedom?&lt;/p>
&lt;p>A couple of months ago, I passed a lottery station while jogging at night and saw that the scratch-off lottery prize was as high as 200,000. I suddenly started fantasizing about what would happen if I won. If I won 200,000, how would I spend it? It seems that this amount is not particularly large, and I really can't think of what to buy. The only thing I can think of is probably buying a car. Is 200,000 too little? What if it's 500,000? It seems there isn't much difference. What if it's 5 million? The first thought in my mind was that it might not be enough to buy a house in Shenzhen, but in fact, it's enough to pay a civil servant with an annual salary of 200,000 for 25 years.&lt;/p>
&lt;p>It seems that getting a lump sum of money all at once can't satisfy me. Compared to that, I might prefer to have a steady and continuous income. How can I maintain a steady and continuous income? To be honest, the internet industry cannot guarantee such stability. I don't know how long I can stay, and I don't know how long this industry can last. Therefore, relying solely on working cannot bring freedom. Perhaps I need to find other ways to make money.&lt;/p>
&lt;p>What other methods are there to make money? Actively exploring.&lt;/p>
&lt;h2 id="building-image">Building Image&lt;/h2>
&lt;p>Since starting my blog in 2018, I have been using the name and image of YeungYeah for 5 years, gradually expanding it to various platforms, and have initially built my own image brand. Although there may not be many people who know me, at least there is a name.&lt;/p>
&lt;p>Why do I need a name? On the internet, for various reasons, establishing different connections with others is the most charming part of the web. In the internet, if you can build a personal brand image, accumulate enough reputation, and gain enough influence, it will be easier to establish connections with others. What's the use of connection? I can't say specifically, but for me, it means more opportunities and possibilities.&lt;/p>
&lt;p>Therefore, this year I started to be more active in &lt;a href="https://twitter.com/ScottYeung">tweeting&lt;/a> and interacting, and even started to operate my &lt;a href="https://www.xiaohongshu.com/user/profile/617be18f000000000201b44a">Xiaohongshu&lt;/a>, writing some coding technology-related content. The data seems quite ordinary, but it doesn't matter, I'm just playing with it.&lt;/p>
&lt;p>This year, I attended a high school classmate's wedding and caught up with my classmates. I learned that he is currently doing programming self-media on Xiaohongshu and other social platforms, doing programming tutoring and knowledge payment, which seems to be a good way to make money. So, I questioned self-media, learned about self-media, and became self-media. This is also part of the reason why I started playing with Xiaohongshu. Of course, this doesn't necessarily mean that I'm going to become a self-media and start monetizing traffic to make money. I have a clear understanding of myself, and I probably can't do it.&lt;/p>
&lt;p>I hope that one day I can go from nobody to somebody.&lt;/p>
&lt;h2 id="facing-ai">Facing AI&lt;/h2>
&lt;p>Around this time last year, ChatGPT was opened for external use. I immediately registered an account and started using it, but the user experience was quite ordinary, so I played with it for a while and then put it aside. Then a few months later in March, it suddenly evolved into a groundbreaking technology that everyone was exclaiming about.&lt;/p>
&lt;p>In fact, AI technology has been developing for several years. Since the emergence of CNN neural networks, we have entered the era of AI. The AI technology in the scientific research circle is booming, and various AI+ articles have appeared. AI itself is also developing rapidly. Everyone knows about AI, and every company likes to mark their products with power by XXAI technology. But they just use AI technology on existing products.&lt;/p>
&lt;p>Then, with the appearance of ChatGPT, it completely broke out of the circle, to the point where even my dad asked me if there was a way to use it. ChatGPT is indeed a good thing, and it has now almost become an indispensable tool for many people. I also used the ChatGPT API to create one (thanks to &lt;a href="https://github.com/ChatGPTNextWeb/ChatGPT-Next-Web">ChatGPT-Next-Web&lt;/a>).&lt;/p>
&lt;p>The emergence of ChatGPT has brought many opportunities and traffic to many people. Although some people may still not accept or even resist the development of AI for various reasons and concepts, I think this is an inevitable trend. The future AI is likely to become a ubiquitous basic resource like water and electricity, integrated into people's daily lives &lt;del>(this sounds a lot like the old cloud computing slogan)&lt;/del>.&lt;/p>
&lt;hr>
&lt;p>This year, as the first year after reopening, and also the first year of my transition into society as a worker, everything is in its early stages for me, and everything has new hope. The possibilities are right in front of me. I need to seize the opportunity. If it works, it works. If it doesn't, it doesn't matter. I'll do my best and &lt;strong>go with the flow&lt;/strong>.&lt;/p></description><category domain="https://scottyeung.top/en/posts/">posts</category><category domain="https://scottyeung.top/en/tags/record/">record</category><category domain="https://scottyeung.top/en/tags/summary/">summary</category><category domain="https://scottyeung.top/en/tags/life/">life</category><category domain="https://scottyeung.top/en/tags/AI/">AI</category></item><item><title>Embracing AI with the Arc Browser</title><link>https://scottyeung.top/en/2023/ai-in-arc-browser/</link><guid isPermaLink="true">https://scottyeung.top/en/2023/ai-in-arc-browser/</guid><pubDate>Sun, 15 Oct 2023 08:00:00 +0800</pubDate><author>yeungyeah@qq.com (YeungYeah)</author><description>&lt;p>Despite my previous criticisms of the Arc browser in my usage notes, its unique features and aesthetic appeal are quite attractive to me. Hence, I often find myself switching my default browser to Arc on my computer. Overall, the user experience is quite good, except for the fact that the extension status is not visible and needs to be invoked from the menu when needed.&lt;/p>
&lt;p>After this switch and update to the Arc browser, I noticed that there's a new AI tab in the settings called Max, which seems quite interesting.&lt;/p>
&lt;p>&lt;img src="https://scottyeung.top/my-images/202310142324997.png" alt="">&lt;/p>
&lt;p>Based on a quick look at this settings page, it has the following main features:&lt;/p>
&lt;ul>
&lt;li>Ask questions based on the current page content&lt;/li>
&lt;li>Generate a preview of the link content based on AI&lt;/li>
&lt;li>Use AI to intelligently name the title of the open tab and the downloaded file&lt;/li>
&lt;li>Invoke ChatGPT to ask questions&lt;/li>
&lt;/ul>
&lt;p>After trying it out, I think the idea is quite good, but there is still room for further improvement.&lt;/p>
&lt;h2 id="link-preview">Link Preview&lt;/h2>
&lt;p>The hyperlink preview feature is quite interesting. It allows you to see the description of the link before opening it. The preview format is a one-sentence title, along with some grouped attributes. The content of the generated preview is quite accurate. However, at this stage, the language of the generated preview is always English, even if I adjust the browser's Preferred languages to English, the preview is still in English. Although it's not wrong, it doesn't help much in understanding what the link content is about. But I feel there is a lot of room for improvement, and if optimized further, it could be very powerful.&lt;/p>
&lt;p>&lt;img src="https://scottyeung.top/my-images/202310142327077.png" alt="">&lt;/p>
&lt;h2 id="chatgpt">ChatGPT&lt;/h2>
&lt;p>Invoking ChatGPT is a relatively normal feature, which can be called up by option + command + G (on Windows it should be alt + ctrl + G). However, in essence, it's just a launcher. After entering a question, it redirects to the &lt;a href="https://chat.openai.com/">chat.openai.com&lt;/a> page for Q&amp;amp;A. (But I noticed that the current ChatGPT official website seems to have lifted the regional restrictions? Accessing it from a 🇭🇰 network is very smooth.)&lt;/p>
&lt;p>&lt;img src="https://scottyeung.top/my-images/202310142345200.png" alt="">&lt;/p>
&lt;h2 id="page-content-question">Page Content Question&lt;/h2>
&lt;p>After invoking the traditional page search, if the content is not found, you can ask a question. I suppose it's also invoking ChatGPT to ask the question? But I've tried several times and always encountered an error, returning &lt;code>Sorry, I encountered an error.&lt;/code>. I searched online and it seems this is not an isolated case, so I couldn't try it out.&lt;/p>
&lt;h2 id="intelligent-renaming">Intelligent Renaming&lt;/h2>
&lt;p>An interesting change in the Arc browser is the removal of the concept of bookmarks, replaced by the concept of pinning tabs. Now, after pinning a tab, the title of this tab is intelligently renamed to be shorter and neater, which is quite practical. Personally, I think it's equivalent to automatically generating a title with AI when bookmarking a page. This feature is quite useful, as many times when adding bookmarks, we won't give it a title, and using its original title might be too long or not descriptive enough.&lt;/p></description><category domain="https://scottyeung.top/en/posts/">posts</category><category domain="https://scottyeung.top/en/tags/Productivity/">Productivity</category><category domain="https://scottyeung.top/en/tags/Tools/">Tools</category><category domain="https://scottyeung.top/en/tags/Documentation/">Documentation</category><category domain="https://scottyeung.top/en/tags/Discussion/">Discussion</category><category domain="https://scottyeung.top/en/tags/AI/">AI</category></item><item><title>How to Publish a Gradle Project to Maven Central Repository</title><link>https://scottyeung.top/en/2023/gradle-deploy-maven-central/</link><guid isPermaLink="true">https://scottyeung.top/en/2023/gradle-deploy-maven-central/</guid><pubDate>Sat, 16 Sep 2023 22:34:26 +0800</pubDate><author>yeungyeah@qq.com (YeungYeah)</author><description>&lt;p>How can you publish the output of a completed gradle project to the Maven Central Repository, so that everyone can benefit from your work? Last week, I went through the process and published a simple clipboard operation project I wrote. I found it a bit complicated, the process was long, and with gradle, the updates are too fast and compatibility is poor. This makes the documents found online somewhat inconsistent. What's worse, even the &lt;a href="https://central.sonatype.org/publish/publish-gradle">official gradle publishing tutorial from Sonatype&lt;/a> is inconsistent with the latest gradle8 version. Therefore, I could only refer to the process inside, and the details had to be figured out by myself.&lt;/p>
&lt;h2 id="the-essence-of-publishing">The Essence of Publishing&lt;/h2>
&lt;p>The essence of project publishing is to package the project into a usable artifact, which includes compiled bytecode and a configuration pom file containing project-related information. These outputs can be uploaded to a hosting platform available for public use, such as &lt;a href="http://links.sonatype.com/products/nexus/pro/home">Sonatype Nexus Repository&lt;/a>, and eventually synchronized to the Central Repository. When a dependency is needed, the dependency identifier groupId:artifactId:version is declared, and the build tools Maven/gradle will automatically fetch and use the dependency from these repositories. Therefore, the core operations of publishing are actually two:&lt;/p>
&lt;ol>
&lt;li>Package the project into output&lt;/li>
&lt;li>Upload the output to the hosting platform&lt;/li>
&lt;/ol>
&lt;h2 id="publishing-process">Publishing Process&lt;/h2>
&lt;p>Here, I will take publishing to the Sonatype repository as an example. This is an open-source artifact hosting platform that everyone can use, and the outputs are all public.&lt;/p>
&lt;blockquote>
&lt;p>The version of gradle used here is the latest 8.2&lt;/p>
&lt;/blockquote>
&lt;h3 id="create-a-ticket">Create a Ticket&lt;/h3>
&lt;p>If you want to publish output to a public repository, you first need to register a &lt;a href="https://issues.sonatype.org/secure/Signup!default.jspa">JIRA account&lt;/a> with Sonatype, and then submit an issue to create a &lt;a href="https://issues.sonatype.org/secure/CreateIssue.jspa?pid=10134&amp;amp;issuetype=21">ticket&lt;/a> for the output to be published. In this ticket, you need to fill in the basic information of the output to be published, including groupId, project address, and project code management address (SCM).&lt;/p>
&lt;p>After the ticket is filled out, Sonatype will review the relevant information and confirm whether the user has ownership of the groupId used (that is, whether they have control over the domain name reversed from the groupId). For example, if I want to use my own domain name top.yeungyeah as the groupId, I will be asked to add a resolution to the domain name's DNS. In addition to these common domain names, you can also use the GitHub Page provided by GitHub as a domain name, such as io.github.username. The verification method for this is quite simple, just create a GitHub repo. Therefore, you need to consider the groupId when publishing, and you can't just fill it in randomly.&lt;/p>
&lt;p>&lt;img src="https://scottyeung.top/my-images/202309161941492.png" alt="">&lt;/p>
&lt;h3 id="improve-the-project">Improve the Project&lt;/h3>
&lt;p>Sonatype has certain quality requirements for the projects to be published. In addition to the jar package compiled from the project, it also requires the project's source code and javadoc to be uploaded and published to the hosting platform. This requires additional configuration in the gradle build configuration file &lt;code>build.gradle.kts&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="line">&lt;span class="cl">&lt;span class="n">java&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">withJavadocJar&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">withSourcesJar&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>In addition, the information contained in the pom configuration file generated by the published project is required to be complete, such as the developer information of the project, the open-source license, all need to be configured.&lt;/p>
&lt;h3 id="maven-publish">maven-publish&lt;/h3>
&lt;p>Some people may find it strange why we use gradle, but we keep talking about Maven's publishing, and the publishing is also to the Maven Central Repository. In fact, gradle can support many types of dependencies, in addition to maven, it can also support ivy. However, Maven is now more widely used, so basically, we are using dependencies in the maven repository (and it seems that gradle has not established its own dependency format standard).&lt;/p>
&lt;p>The latest gradle can use its maven-publish plugin to complete the publishing-related functions, rather than the previous maven plugin. Many of the configurations mentioned in the above documents are not available in this new maven-publish plugin😂&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="line">&lt;span class="cl">&lt;span class="n">plugins&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">..&lt;/span>&lt;span class="p">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">`&lt;/span>&lt;span class="n">maven&lt;/span>&lt;span class="p">-&lt;/span>&lt;span class="n">publish&lt;/span>&lt;span class="err">`&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">publishing&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">publications&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">create&lt;/span>&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="n">MavenPublication&lt;/span>&lt;span class="p">&amp;gt;(&lt;/span>&lt;span class="s2">&amp;#34;maven&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Replace with your own output description information
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">groupId&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;io.github.yeung66&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">artifactId&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;clipboard-jvm&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">version&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">version&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">from&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">components&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;java&amp;#34;&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">pom&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Fill in the generated POM information
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">name&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="k">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;clipboard-jvm&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">description&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="k">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;A simple clipboard library for jvm.&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">url&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="k">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;https://github.com/yeung66/clipboard-jvm&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">licenses&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">license&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">name&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="k">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;The Apache License, Version 2.0&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">url&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="k">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;http://www.apache.org/licenses/LICENSE-2.0.txt&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">developers&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">developer&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">id&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="k">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;yeung66&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">name&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="k">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;YeungYeah&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">email&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="k">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;email@host.com&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">scm&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">connection&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="k">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;scm:git:git://github.com/yeung66/clipboard-jvm.git&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">developerConnection&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="k">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;scm:git:ssh://github.com/yeung66/clipboard-jvm.git&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">url&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="k">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;https://github.com/yeung66/clipboard-jvm&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">repositories&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">maven&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">name&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="s2">&amp;#34;OSSRH&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">url&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nc">URI&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">create&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">credentials&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">username&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">project&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">properties&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;ossrhUsername&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">String&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">password&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">project&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">properties&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="s2">&amp;#34;ossrhPassword&amp;#34;&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">String&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>The account and password can be placed in the gradle.properties under the user directory to prevent leakage.&lt;/p>
&lt;h3 id="signing">signing&lt;/h3>
&lt;p>After generating the output, you also need to sign the generated output. This allows the hosting platform to ensure that the upload is completed by the user and guarantees the reliability of the output. To sign the published output, you need to first generate your own key and use the corresponding private key file for signing. Then upload the public key to the public key server for the hosting platform to obtain the public key for signature verification.&lt;/p>
&lt;p>The specific steps are as follows:&lt;/p>
&lt;ol>
&lt;li>First, use gpg to generate your own key, you can refer to Ruan Yifeng's &lt;a href="https://www.ruanyifeng.com/blog/2013/07/gpg.html">this document&lt;/a>&lt;/li>
&lt;li>Based on the key generated above, get the path of the private key, use the password of the private key, the keyId of the public key, and fill it in the gradle.properties file. For security and not to leak personal information, this kind of sensitive information can be placed in the configuration file under the user directory instead of the project, so that it can be well avoided from being leaked with the code repository uploaded to GitHub.
&lt;ul>
&lt;li>
&lt;pre tabindex="0">&lt;code class="language-property" data-lang="property">signing.keyId= #The last 8 symbols of the keyId
signing.password= #passphrase used to protect your private key
signing.secretKeyRingFile= #absolute path to the secret key ring file containing your private key
&lt;/code>&lt;/pre>&lt;/li>
&lt;li>(Since gpg 2.1, you need to export the keys with command gpg --keyring secring.gpg --export-secret-keys &amp;gt; ~/.gnupg/secring.gpg).&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>Upload the public key to the public key server
&lt;ol>
&lt;li>&lt;img src="https://scottyeung.top/my-images/202309162022777.png" alt="">&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>Add the signing plugin in the build issue and configure it
&lt;pre tabindex="0">&lt;code>plugins {
...
signing
}
signing {
sign(publishing.publications[&amp;#34;maven&amp;#34;])
}
&lt;/code>&lt;/pre>&lt;/li>
&lt;/ol>
&lt;p>After the above configuration, when executing the build publishing task, it will automatically sign the build output.&lt;/p>
&lt;h3 id="execute-publishing">Execute Publishing&lt;/h3>
&lt;p>Just execute the gradle publishing task&lt;/p>
&lt;p>&lt;img src="https://scottyeung.top/my-images/202309162043253.png" alt="">&lt;/p>
&lt;p>If executed smoothly, the project will package the compiled output, sign it, and then upload it to the hosting platform. At this time, you can release a release in the &lt;a href="https://central.sonatype.org/publish/release/">hosting platform&lt;/a>.&lt;/p>
&lt;p>Find the output just published in the staging repositories, check the uploaded files for errors, and click the close button, it will automatically advance to the inspection stage, checking whether the published output meets the standard. This check includes the quality check and information check mentioned above. After the check is passed, an email reminder will be sent, and then you can click the release button to officially publish the output. After publishing, the output will be synchronized to the Maven Central repository, and you can query it on &lt;a href="https://mvnrepository.com/">mvnrepository&lt;/a> or &lt;a href="https://central.sonatype.com/">sonatype central&lt;/a>. However, this staging step seems to be automated through a &lt;a href="https://github.com/Codearte/gradle-nexus-staging-plugin/">plugin&lt;/a>. If it can be automated, it might be simpler.&lt;/p>
&lt;hr>
&lt;p>At this point, the gradle project can be successfully published to the Maven Central Repository for everyone to use.&lt;/p></description><category domain="https://scottyeung.top/en/posts/">posts</category><category domain="https://scottyeung.top/en/tags/gradle/">gradle</category><category domain="https://scottyeung.top/en/tags/jvm/">jvm</category><category domain="https://scottyeung.top/en/tags/Java/">Java</category><category domain="https://scottyeung.top/en/tags/kotlin/">kotlin</category><category domain="https://scottyeung.top/en/tags/maven/">maven</category><category domain="https://scottyeung.top/en/tags/coding-logs/">coding logs</category></item><item><title>Clipboard Access in JVM</title><link>https://scottyeung.top/en/2023/clipboard-access-jvm/</link><guid isPermaLink="true">https://scottyeung.top/en/2023/clipboard-access-jvm/</guid><pubDate>Sun, 10 Sep 2023 20:00:00 +0800</pubDate><author>yeungyeah@qq.com (YeungYeah)</author><description>&lt;p>The idea originated from my desire to write a Kotlin script that reads the content of the clipboard and saves it to a file. However, after searching online, the methods given by Java and Kotlin both access the system clipboard through the awt package in the JDK. Since Kotlin scripts still run on the JVM target, the methods are universal.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">java.awt.*&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">java.awt.datatransfer.DataFlavor&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">java.awt.datatransfer.UnsupportedFlavorException&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kn">import&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nn">java.io.IOException&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">Test&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kt">void&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">main&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="o">[]&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">args&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">throws&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">IOException&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">UnsupportedFlavorException&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">var&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">clipboard&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Toolkit&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getDefaultToolkit&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">getSystemClipboard&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">var&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">transferable&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">clipboard&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getContents&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">System&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">out&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">transferable&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getTransferData&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">DataFlavor&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">stringFlavor&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="line">&lt;span class="cl">&lt;span class="k">val&lt;/span> &lt;span class="py">toolkit&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nc">Toolkit&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">getDefaultToolkit&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">val&lt;/span> &lt;span class="py">clipboard&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">toolkit&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">systemClipboard&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">val&lt;/span> &lt;span class="py">result&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="n">clipboard&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">getData&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nc">DataFlavor&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">stringFlavor&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="k">as&lt;/span> &lt;span class="n">String&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>This method is usable and supports a wide range of data types, not only text but also images. However, there is a drawback: the headless option must be turned off when using it. Kotlin is turned off by default, and it needs to be explicitly configured with &lt;code>kotlin -Djava.awt.headless=false&lt;/code> to disable it.&lt;/p>
&lt;blockquote>
&lt;p>Headless mode is a system configuration in which the display device, keyboard, or mouse is lacking. Sounds unexpected, but actually you can perform different operations in this mode, even with graphic data.&lt;/p>
&lt;/blockquote>
&lt;p>After disabling the headless mode, the code is usable. However, running it will pull up a JRE program. Although this pulled-up program has no interface, it will still force a window switch, which feels bad. So, I had to find another way and chose to use Node.js. Finally, I found &lt;a href="https://github.com/sindresorhus/clipboardy">clipboardy&lt;/a>, a simple and easy-to-use npm library, which met my needs first. After carefully reading its implementation code, it accesses the system clipboard by calling the command after. However, if you call the system command, the commands in different system environments are different. How to take into account portability and run in different system environments? The solution is also simple and crude: manually write an implementation for each system, and if some systems do not have this operating system clipboard command program, include a binary as a fallback in the npm package. Simple, but usable.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-javascript" data-lang="javascript">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">import&lt;/span> &lt;span class="nx">process&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;node:process&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">import&lt;/span> &lt;span class="nx">isWSL&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;is-wsl&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">import&lt;/span> &lt;span class="nx">termux&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;./lib/termux.js&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">import&lt;/span> &lt;span class="nx">linux&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;./lib/linux.js&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">import&lt;/span> &lt;span class="nx">macos&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;./lib/macos.js&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">import&lt;/span> &lt;span class="nx">windows&lt;/span> &lt;span class="nx">from&lt;/span> &lt;span class="s1">&amp;#39;./lib/windows.js&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">platformLib&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">switch&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">process&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">platform&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="s1">&amp;#39;darwin&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">macos&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="s1">&amp;#39;win32&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">windows&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">case&lt;/span> &lt;span class="s1">&amp;#39;android&amp;#39;&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">process&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">env&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">PREFIX&lt;/span> &lt;span class="o">!==&lt;/span> &lt;span class="s1">&amp;#39;/data/data/com.termux/files/usr&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">throw&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nb">Error&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;You need to install Termux for this module to work on Android: https://termux.com&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">termux&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">default&lt;/span>&lt;span class="o">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// `process.platform === &amp;#39;linux&amp;#39;` for WSL.
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">isWSL&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">windows&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">linux&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">})();&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>So, naturally, I borrowed this idea and implemented a version with Kotlin. The code implementation can be seen at &lt;a href="https://github.com/yeung66/clipboard-jvm">clipboard-jvm&lt;/a>. The idea is to call different shell commands for different operating systems to access and operate the system clipboard. For executing external commands, it's also very simple to use.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="line">&lt;span class="cl">&lt;span class="k">import&lt;/span> &lt;span class="nn">org.yeungyeah.clipboard.Clipboard&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">val&lt;/span> &lt;span class="py">clipboard&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nc">Clipboard&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">getClipboard&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">clipboard&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="k">get&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">clipboard&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="k">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Hello World&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">clipboard&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="k">get&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>I originally wanted to publish the dependency library to the Maven Central Repository so that the script could be used directly in one line. However, Maven publishing is really troublesome. After studying for a few hours, I was still blocked by some related checks, so I could only install it locally for my own use first. &lt;del>I will update it after uploading it to Maven Central, and also update an article on how to deploy to Maven Central.&lt;/del>&lt;/p>
&lt;p>After deploying to the Maven Central Repository, you can import the dependency directly through configuration. For example, in a Java project, you can use&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>io.github.yeung66&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>clipboard-jvm&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>1.0.0&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Or in a Kotlin script, directly&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-kotlin" data-lang="kotlin">&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@file&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">DependsOn&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;io.github.yeung66:clipboard-jvm:1.0.0&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">import&lt;/span> &lt;span class="nn">org.yeungyeah.clipboard.Clipboard&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">val&lt;/span> &lt;span class="py">clipboard&lt;/span> &lt;span class="p">=&lt;/span> &lt;span class="nc">Clipboard&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="n">getClipboard&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">clipboard&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="k">get&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">clipboard&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="k">set&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s2">&amp;#34;Hello World&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">println&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">clipboard&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="k">get&lt;/span>&lt;span class="p">())&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Lift off🛫️. However, I have only tested it on macOS. In theory, it should work on other systems too. If you're interested, you can give it a try.&lt;/p></description><category domain="https://scottyeung.top/en/posts/">posts</category><category domain="https://scottyeung.top/en/tags/Java/">Java</category><category domain="https://scottyeung.top/en/tags/kotlin/">kotlin</category><category domain="https://scottyeung.top/en/tags/coding/">coding</category><category domain="https://scottyeung.top/en/tags/Tools/">Tools</category><category domain="https://scottyeung.top/en/tags/JavaScript/">JavaScript</category></item><item><title>A Brief Note on Using the Arc Browser</title><link>https://scottyeung.top/en/2023/arc-browser/</link><guid isPermaLink="true">https://scottyeung.top/en/2023/arc-browser/</guid><pubDate>Wed, 02 Aug 2023 20:46:35 +0800</pubDate><author>yeungyeah@qq.com (YeungYeah)</author><description>&lt;p>I had heard about the Arc browser, which claims to change the browser landscape and replace Chrome, but it was only available for Macos and not for Windows systems, so all I could do was wait and see. It wasn't until I got a Mac for work and bought a MacBook for myself that I finally had the chance to try it out. So, I immediately downloaded it, set it as the default browser, and started to explore.&lt;/p>
&lt;p>&lt;img src="https://scottyeung.top/my-images/20230802204238.png" alt="">&lt;/p>
&lt;p>Upon opening the Arc browser, the first impression it gives is that it's visually appealing, with its design and animation effects giving a flamboyant vibe. It's said that these features come at a cost to performance, but I didn't notice any performance issues during actual use.&lt;/p>
&lt;p>In actual use, compared to Chrome-based browsers, Arc has the following main features:&lt;/p>
&lt;ol>
&lt;li>Vertical sidebar. Arc moves the top tab bar, address bar, bookmarks, etc., to the sidebar to provide more browsing height.&lt;/li>
&lt;li>Different tab mechanisms.
&lt;ol>
&lt;li>Arc doesn't have the concept of bookmarks and favorites. Instead, you can pin pages or set them as favs.&lt;/li>
&lt;li>To solve the problem of having too many tabs open and hard to close, Arc chooses to close tabs after a certain period, with a maximum of 24 hours, the default seems to be a few hours. To prevent tabs you want to keep from being closed, you must pin them.&lt;/li>
&lt;li>Also, for the common situation of opening links in various apps just to take a quick look, Arc provides a mini-window mode for temporarily opening some links, which you can then enlarge if necessary.&lt;/li>
&lt;/ol>
&lt;/li>
&lt;li>Good support for page split-screen, you can split the current page to open other pages at any time.&lt;/li>
&lt;li>Use Space to replace multiple windows. It provides the concept of Space to isolate the use of the browser, tabs and pinned pages from different groups can be put into different spaces for use. Consequently, there is less use of multiple windows, and even new windows opened will share already opened tabs.&lt;/li>
&lt;/ol>
&lt;p>Essentially, Arc also uses the Chromium kernel, so it can support all the plugins that Chrome supports, and it feels okay to use. However, my assessment is that while the Arc browser indeed has unique features, it's not necessarily a user-friendly browser, especially some of its concepts. Some people may love them, but for me, they feel restrictive. For example:&lt;/p>
&lt;ol>
&lt;li>Making decisions for users and forcibly closing tabs. This alone means that Arc cannot be used in work scenarios where many work pages need to be kept open.&lt;/li>
&lt;li>Awkward tab synchronization. On the one hand, it wants you to close viewed pages promptly, but on the other hand, it takes it upon itself to sync all your open tabs to every window you open, even syncing your computer's open tabs to your phone in real time. It feels quite awkward to use, especially since the browsing scenarios on mobile and computer are often separate.&lt;/li>
&lt;li>Overemphasis on aesthetics leads to many small problems in detail, making it unfriendly to use. For example, the split-screen prompt is automatically triggered when you get close to the top right corner, but sometimes there are buttons on the edge of the top right corner, which may even become unclickable.&lt;/li>
&lt;li>After the concept of bookmarks is gone, you can only pin pages for collection, but pins can't be shared on Spaces, and they become tied to a specific Space, ultimately leading to the use of only one Space, losing the meaning of Spaces.&lt;/li>
&lt;li>The fact that a browser forces you to log in to use it, and even has restrictions on where you can log in from, creates obstacles for users from the start.&lt;/li>
&lt;li>The mobile application is too simple, it doesn't even have incognito browsing.&lt;/li>
&lt;/ol>
&lt;p>As a browser with distinctive features, Arc is fun to play with, but if you want to immerse yourself and use it intensively, you may have to endure various differences and discomforts. Of course, like stinky tofu, there are always people who can accept it, and if you can, its advantages are indeed attractive. Also, Arc seems to have high customizability, allowing you to customize styles and even block layouts, but my exploration time (and interest) was limited, so I didn't bother. However, if you are interested, you can also play around and give it a try.&lt;/p>
&lt;p>Before I had a MacBook, I always had a special longing for Macos-exclusive applications. However, after really using them, they seem to be just so-so, or just okay. Recently, there have been many new software on Macos, such as Warp Terminal, Raycast, which I have been using. Maybe it's because I haven't used them deeply, or gotten to their essence, so they feel quite ordinary. I'll continue to explore slowly.&lt;/p></description><category domain="https://scottyeung.top/en/posts/">posts</category><category domain="https://scottyeung.top/en/tags/Productivity/">Productivity</category><category domain="https://scottyeung.top/en/tags/Tools/">Tools</category></item><item><title>Don't Take Open Source Software for Granted</title><link>https://scottyeung.top/en/2023/open-source-issue/</link><guid isPermaLink="true">https://scottyeung.top/en/2023/open-source-issue/</guid><pubDate>Thu, 16 Feb 2023 16:53:34 +0800</pubDate><author>yeungyeah@qq.com (YeungYeah)</author><description>&lt;p>This morning, while scrolling through Twitter, I came across an &lt;a href="https://github.com/zloirock/core-js/blob/master/docs/2023-02-14-so-whats-next.md">article&lt;/a> written by the author of core-js a couple of days ago, about his experiences developing open source software. His experiences are indeed eye-opening and heart-wrenching. What is most shocking and saddening is that the core-js, which the author has put a lot of effort into developing and maintaining, has indeed gained everyone's attention and recognition (it has nearly 20k stars on GitHub), and this software library is also widely used (the total download volume on npm has reached 9 billion, 52% of the top 1000 websites use core-js, and 75-80% of the top 100 websites use it).&lt;/p>
&lt;p>However, such widespread recognition and use has not brought any income to the author. The peak period of a few hundred dollars in monthly donations is not at all commensurate with the time and effort required to maintain the project. Added to the fact that the author is unemployed and in a rather sensitive country, the income is indeed a bit lacking, and can even be considered impoverished. This led to the author not being able to raise enough money for compensation after a traffic accident, and he even served ten months in prison. It's very tragic, but for some users, they feel it has nothing to do with them, and even think that the help and donation requests made by the author in the project are polluting the open source ecosystem, which has also earned him many haters.&lt;/p>
&lt;p>&lt;img src="https://scottyeung.top/my-images/202304051948549.png" alt="">&lt;/p>
&lt;p>&lt;img src="https://scottyeung.top/my-images/202304051948233.png" alt="">&lt;/p>
&lt;p>Looking at it this way, it's really hard to do open source individually. If there is no full-time job with a stable income, or a way to monetize open source into income and traffic, it's really hard to make a living solely from open source projects, and it's really hard to keep up the good development and maintenance quality with love. Especially compared to the high income of the Internet industry / cs development, it is too discouraging.&lt;/p>
&lt;p>Perhaps it's because using open source projects is too simple and easy. A search on the open source community, a command line knock, and others' hard work can be used for oneself immediately. Users easily overlook the effort and achievements required to develop and maintain open source projects. Everyone's attitude towards open source projects has become taken for granted - it's expected that the author writes for everyone to use, provides maintenance and demand development support, and even some users think it's the author and maintainer's duty to answer usage problems and provide technical support. And what will most users give in return? Give a star as a token of appreciation.&lt;/p>
&lt;p>&lt;img src="https://scottyeung.top/my-images/202304051949719.png" alt="">&lt;/p>
&lt;p>A few months ago, &lt;a href="https://scottyeung.top/2022/when-software-gets-used-to-open-source/">I was still immersed in the beauty of the open source ecosystem&lt;/a>, thinking that the atmosphere of mutual aid, sharing, and dedication in the open source community was great, very friendly to developers, and even considered whether to choose a job related to open source software to contribute to the community. The harsh reality makes one sober, and one must consider more. I also hope that everyone can consider more, for the open source community and open source developers, don't take it for granted.&lt;/p></description><category domain="https://scottyeung.top/en/posts/">posts</category><category domain="https://scottyeung.top/en/tags/Essay/">Essay</category><category domain="https://scottyeung.top/en/tags/Open-Source/">Open Source</category><category domain="https://scottyeung.top/en/tags/Software/">Software</category></item><item><title>A Record on Using Spring GraphQL</title><link>https://scottyeung.top/en/2021/guide-to-spring-graphql/</link><guid isPermaLink="true">https://scottyeung.top/en/2021/guide-to-spring-graphql/</guid><pubDate>Wed, 15 Sep 2021 16:26:42 +0800</pubDate><author>yeungyeah@qq.com (YeungYeah)</author><description>&lt;p>&lt;a href="https://spring.io/projects/spring-graphql#overview">Spring GraphQL&lt;/a> is a new Spring Application integrating GraphQL, released by Spring this year. Thanks to the out-of-the-box features of Spring Boot, it allows for the quick construction of a usable GraphQL service. However, despite its usability, the &lt;a href="https://docs.spring.io/spring-graphql/docs/1.0.0-SNAPSHOT/reference/html/">documentation&lt;/a> leaves much to be desired, especially for some advanced features, which require self-exploration through the API documentation.&lt;/p>
&lt;p>The following records the related usage.&lt;/p>
&lt;h2 id="setup">Setup&lt;/h2>
&lt;p>Initialization can be done by building a Spring Boot project.&lt;/p>
&lt;p>Using Gradle&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-GROOVY" data-lang="GROOVY">&lt;span class="line">&lt;span class="cl">&lt;span class="n">dependencies&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">implementation&lt;/span> &lt;span class="s1">&amp;#39;org.springframework.boot:spring-boot-starter-web&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// Spring GraphQL Boot starter
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">implementation&lt;/span> &lt;span class="s1">&amp;#39;org.springframework.experimental:graphql-spring-boot-starter:1.0.0-SNAPSHOT&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// ...
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">repositories&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">mavenCentral&lt;/span>&lt;span class="o">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">maven&lt;/span> &lt;span class="o">{&lt;/span> &lt;span class="n">url&lt;/span> &lt;span class="s1">&amp;#39;https://repo.spring.io/milestone&amp;#39;&lt;/span> &lt;span class="o">}&lt;/span> &lt;span class="c1">// Spring milestones
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="n">maven&lt;/span> &lt;span class="o">{&lt;/span> &lt;span class="n">url&lt;/span> &lt;span class="s1">&amp;#39;https://repo.spring.io/snapshot&amp;#39;&lt;/span> &lt;span class="o">}&lt;/span> &lt;span class="c1">// Spring snapshots
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Or using Maven&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-xml" data-lang="xml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;dependencies&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.springframework.boot&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>spring-boot-starter-web&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> // Spring GraphQL Boot starter
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;groupId&amp;gt;&lt;/span>org.springframework.experimental&lt;span class="nt">&amp;lt;/groupId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;artifactId&amp;gt;&lt;/span>graphql-spring-boot-starter&lt;span class="nt">&amp;lt;/artifactId&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;version&amp;gt;&lt;/span>1.0.0-SNAPSHOT&lt;span class="nt">&amp;lt;/version&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/dependency&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c">&amp;lt;!-- ... --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/dependencies&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c">&amp;lt;!-- For Spring project milestones or snapshot releases --&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;repositories&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;repository&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;id&amp;gt;&lt;/span>spring-milestones&lt;span class="nt">&amp;lt;/id&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;name&amp;gt;&lt;/span>Spring Milestones&lt;span class="nt">&amp;lt;/name&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;url&amp;gt;&lt;/span>https://repo.spring.io/milestone&lt;span class="nt">&amp;lt;/url&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/repository&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;repository&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;id&amp;gt;&lt;/span>spring-snapshots&lt;span class="nt">&amp;lt;/id&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;name&amp;gt;&lt;/span>Spring Snapshots&lt;span class="nt">&amp;lt;/name&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;url&amp;gt;&lt;/span>https://repo.spring.io/snapshot&lt;span class="nt">&amp;lt;/url&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;snapshots&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;enabled&amp;gt;&lt;/span>true&lt;span class="nt">&amp;lt;/enabled&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/snapshots&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nt">&amp;lt;/repository&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nt">&amp;lt;/repositories&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>After importing the dependencies, place the Graphql Schema file in the &lt;code>resources/graphql&lt;/code> directory and make the corresponding configuration to run. After running, you can see the web version of the playground at the set path.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">spring&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">graphql&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">graphiql&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Provides a web-based playground for assistance&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">enabled&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">schema&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Provides schema&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">printer&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">enabled&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">true&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">path&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">/query&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="c"># Graphql endpoint&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="query-and-mutation">Query and Mutation&lt;/h2>
&lt;p>The queries and mutations provided in the Schema are mapped to methods in the Controller through annotations for processing and returning the corresponding data. The convention method is used by default here, as long as the name of the method and its parameters are consistent with the Schema declaration, it can be automatically mapped, otherwise it can be set through the parameters of the annotation.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@Controller&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">TodoController&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@QueryMapping&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">List&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">TodoItem&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">todoItems&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GraphQLContext&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cxt&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">var&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">u&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">getUserInContext&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cxt&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">todoService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getTodoItemsByUser&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">u&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@MutationMapping&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">TodoItem&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">createTodoItem&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nd">@Argument&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">TodoItemInput&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">todo&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">GraphQLContext&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cxt&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">var&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">getUserInContext&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">cxt&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">todoService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">createTodoItem&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">todo&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>The method's parameters support:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://javadoc.io/doc/com.graphql-java/graphql-java/latest/graphql/schema/DataFetchingEnvironment.html">DataFetchingEnvironment&lt;/a>: Contains rich related information in this query, including query variables, context information, etc.&lt;/li>
&lt;li>The &lt;code>@Argument&lt;/code> annotation can bind the corresponding variables to the parameters.&lt;/li>
&lt;li>GraphQLContext: Used to store the corresponding data content in the access context.&lt;/li>
&lt;/ul>
&lt;h2 id="authorization">Authorization&lt;/h2>
&lt;p>How to perform authorization, the document simply gives a brief introduction saying that Spring Security can be used for authorization. However, my needs are not so complicated, I just need to simply intercept requests, check whether there is token access, if there is token access, then convert it into the corresponding user and give it to the subsequent Controller for processing.&lt;/p>
&lt;p>Here I use WebInterceptor to handle request interception, the main idea is:&lt;/p>
&lt;ol>
&lt;li>Intercept each request and try to take the Authorization field in the request header.&lt;/li>
&lt;li>If there is no such field, skip it.&lt;/li>
&lt;li>If there is this field, try to get the corresponding User based on the token, if not found, throw an invalid token error.&lt;/li>
&lt;li>After finding it, add the User object to the graphQLContext for the Controller to use.&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@Component&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">MyInterceptor&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">implements&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">WebInterceptor&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">final&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">UserService&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">userService&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Autowired&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">MyInterceptor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">UserService&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">userService&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">userService&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">userService&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Override&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Mono&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">WebOutput&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">intercept&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">WebInput&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">webInput&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">WebGraphQlHandler&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">var&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">authHeader&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">webInput&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getHeaders&lt;/span>&lt;span class="p">().&lt;/span>&lt;span class="na">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;Authorization&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">var&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">q&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">webInput&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">toExecutionInput&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Objects&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">isNull&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">authHeader&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">||&lt;/span>&lt;span class="n">authHeader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">size&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="o">==&lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">handle&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">webInput&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">var&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">userService&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getUserByToken&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">authHeader&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">get&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">0&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">if&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">isEmpty&lt;/span>&lt;span class="p">())&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Mono&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">just&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">WebOutput&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">webInput&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ExecutionResultImpl&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GraphqlExceptionBuilder&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">genError&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GraphqlExceptionBuilder&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">ErrorType&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">INVALID_TOKEN&lt;/span>&lt;span class="p">))));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">webInput&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">configureExecutionInput&lt;/span>&lt;span class="p">(((&lt;/span>&lt;span class="n">executionInput&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">builder&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">Map&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Object&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">HashMap&lt;/span>&lt;span class="o">&amp;lt;&amp;gt;&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">put&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;user&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">get&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}};&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">builder&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">graphQLContext&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">context&lt;/span>&lt;span class="p">).&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">next&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">handle&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">webInput&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>In subsequent controller methods, if user information or user permissions are needed, just take out the corresponding object from the graphQLContext, if not available, throw the corresponding error.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">private&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">User&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">getUserInContext&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GraphQLContext&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cxt&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">User&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">cxt&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">getOrEmpty&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;user&amp;#34;&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">orElseThrow&lt;/span>&lt;span class="p">(()&lt;/span>&lt;span class="o">-&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">GraphqlExceptionBuilder&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">genError&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GraphqlExceptionBuilder&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">ErrorType&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">FORBIDDEN&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="error-handler">Error Handler&lt;/h2>
&lt;p>All exceptions thrown during the application run will eventually be returned to the client in the form of GraphQL. At first, I thought that the thrown GraphQLError would be directly returned to the user, so I directly threw an error in the code, trying to return it to the user through the Controller. However, I found that in this way, the extensions I set in the GraphlQLErrorException would always have no effect, but would be classified as INTERNAL_ERROR.&lt;/p>
&lt;p>Later I found that all exceptions would run to something called an ErrorResolver for processing, which would repackage the Error again. So we must write our own ExceptionHandler to override it.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="nd">@Component&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">DataFetcherExceptionHandler&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">extends&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">DataFetcherExceptionResolverAdapter&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nd">@Override&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">GraphQLError&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">resolveToSingleError&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">Throwable&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ex&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">DataFetchingEnvironment&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">env&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">GraphQLError&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ex&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>In addition, the generation of GraphQLError is assisted by a custom Builder tool class, which generates Errors containing message and error through enumeration types.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-java" data-lang="java">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">class&lt;/span> &lt;span class="nc">GraphqlExceptionBuilder&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">enum&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">ErrorType&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">DUPLICATED_USER&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">NO_USER&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">WRONG_PASSWORD&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">INVALID_TOKEN&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">FORBIDDEN&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">NO_ITEM&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Map&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">String&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">Object&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">updateErrorCode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ErrorType&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">errorType&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="k">new&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">HashMap&lt;/span>&lt;span class="o">&amp;lt;&amp;gt;&lt;/span>&lt;span class="p">()&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">put&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;code&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">errorType&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">name&lt;/span>&lt;span class="p">());&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}};&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">public&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kd">static&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">GraphqlErrorException&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="nf">genError&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">ErrorType&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">errorType&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="kd">var&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">err&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">GraphqlErrorException&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">newErrorException&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">switch&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">errorType&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">{&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">case&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">DUPLICATED_USER&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">err&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">message&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;existed username&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">case&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">NO_USER&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">err&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">message&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;not exist username&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">case&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">WRONG_PASSWORD&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">err&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">message&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;wrong password&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">case&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">INVALID_TOKEN&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">err&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">message&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;invalid token&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">case&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">FORBIDDEN&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">err&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">message&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;access forbidden&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">case&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">NO_ITEM&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">err&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">message&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s">&amp;#34;no such query items&amp;#34;&lt;/span>&lt;span class="p">);&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">break&lt;/span>&lt;span class="p">;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="n">err&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">extensions&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">updateErrorCode&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">errorType&lt;/span>&lt;span class="p">));&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="k">return&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="n">err&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="na">build&lt;/span>&lt;span class="p">();&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="p">}&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div></description><category domain="https://scottyeung.top/en/posts/">posts</category><category domain="https://scottyeung.top/en/tags/GraphQL/">GraphQL</category><category domain="https://scottyeung.top/en/tags/Java/">Java</category><category domain="https://scottyeung.top/en/tags/Spring/">Spring</category></item></channel></rss>